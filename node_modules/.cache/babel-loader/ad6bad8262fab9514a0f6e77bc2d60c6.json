{"ast":null,"code":"var _jsxFileName = \"/Users/chriswolfe/Documents/webDev/personal/leaflet/my-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { AttributionControl, MapContainer } from \"react-leaflet\";\nimport { CRS } from \"leaflet\";\nimport Map from \"./Components/Map/Map\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //Change this to match the highest number tile you generated\n  const ZOOM_LEVELS = 5; //Change this to the zoom level you wish to start on\n\n  const STARTING_ZOOM = 4; //Change this to the focal point of your map\n\n  const CENTER_POINT = [-120, 125];\n  const [currentZoom, setZoomLevel] = useState(STARTING_ZOOM);\n\n  const updateZoom = newZoomLevel => setZoomLevel(newZoomLevel);\n\n  const [coords, setCoords] = useState([0, 0]);\n\n  const updateCoords = coords => setCoords(coords);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: CENTER_POINT,\n      minZoom: 1,\n      zoom: currentZoom,\n      scrollWheelZoom: true,\n      style: {\n        height: window.innerHeight,\n        width: window.innerWidth\n      },\n      crs: CRS.Simple,\n      maxZoom: ZOOM_LEVELS,\n      attributionControl: false,\n      children: [/*#__PURE__*/_jsxDEV(Map, {\n        zoom: currentZoom,\n        coords: coords\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AttributionControl, {\n        position: \"bottomright\",\n        prefix: \"Icons from Game-icons.net\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"9DNAswAo24eAfQVSpwJuqzNvcf8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/chriswolfe/Documents/webDev/personal/leaflet/my-app/src/App.js"],"names":["React","useState","AttributionControl","MapContainer","CRS","Map","App","ZOOM_LEVELS","STARTING_ZOOM","CENTER_POINT","currentZoom","setZoomLevel","updateZoom","newZoomLevel","coords","setCoords","updateCoords","height","window","innerHeight","width","innerWidth","Simple"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,kBAAT,EAA6BC,YAA7B,QAAiD,eAAjD;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;;AACA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB;AACA,QAAMC,WAAW,GAAG,CAApB,CAFgB,CAGhB;;AACA,QAAMC,aAAa,GAAG,CAAtB,CAJgB,CAKhB;;AACA,QAAMC,YAAY,GAAG,CAAC,CAAC,GAAF,EAAO,GAAP,CAArB;AAEA,QAAM,CAACC,WAAD,EAAcC,YAAd,IAA8BV,QAAQ,CAACO,aAAD,CAA5C;;AACA,QAAMI,UAAU,GAAIC,YAAD,IAAkBF,YAAY,CAACE,YAAD,CAAjD;;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,CAApC;;AACA,QAAMe,YAAY,GAAIF,MAAD,IAAYC,SAAS,CAACD,MAAD,CAA1C;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,YAAD;AACE,MAAA,MAAM,EAAEL,YADV;AAEE,MAAA,OAAO,EAAE,CAFX;AAGE,MAAA,IAAI,EAAEC,WAHR;AAIE,MAAA,eAAe,EAAE,IAJnB;AAKE,MAAA,KAAK,EAAE;AAAEO,QAAAA,MAAM,EAAEC,MAAM,CAACC,WAAjB;AAA8BC,QAAAA,KAAK,EAAEF,MAAM,CAACG;AAA5C,OALT;AAME,MAAA,GAAG,EAAEjB,GAAG,CAACkB,MANX;AAOE,MAAA,OAAO,EAAEf,WAPX;AAQE,MAAA,kBAAkB,EAAE,KARtB;AAAA,8BAUE,QAAC,GAAD;AAAK,QAAA,IAAI,EAAEG,WAAX;AAAwB,QAAA,MAAM,EAAEI;AAAhC;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE,QAAC,kBAAD;AACE,QAAA,QAAQ,EAAE,aADZ;AAEE,QAAA,MAAM,EAAE;AAFV;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAjCD;;GAAMR,G;;KAAAA,G;AAmCN,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport { AttributionControl, MapContainer } from \"react-leaflet\";\nimport { CRS } from \"leaflet\";\nimport Map from \"./Components/Map/Map\";\nconst App = () => {\n  //Change this to match the highest number tile you generated\n  const ZOOM_LEVELS = 5;\n  //Change this to the zoom level you wish to start on\n  const STARTING_ZOOM = 4;\n  //Change this to the focal point of your map\n  const CENTER_POINT = [-120, 125];\n\n  const [currentZoom, setZoomLevel] = useState(STARTING_ZOOM);\n  const updateZoom = (newZoomLevel) => setZoomLevel(newZoomLevel);\n\n  const [coords, setCoords] = useState([0, 0]);\n  const updateCoords = (coords) => setCoords(coords);\n  return (\n    <div className=\"App\">\n      <MapContainer\n        center={CENTER_POINT}\n        minZoom={1}\n        zoom={currentZoom}\n        scrollWheelZoom={true}\n        style={{ height: window.innerHeight, width: window.innerWidth }}\n        crs={CRS.Simple}\n        maxZoom={ZOOM_LEVELS}\n        attributionControl={false}\n      >\n        <Map zoom={currentZoom} coords={coords} />\n        <AttributionControl\n          position={\"bottomright\"}\n          prefix={\"Icons from Game-icons.net\"}\n        />\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}